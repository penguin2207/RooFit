//
// File generated by rootcint at Wed Feb 20 12:28:09 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIpdfDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "pdfDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void ErfcExpShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_ErfcExpShape(void *p = 0);
   static void *newArray_ErfcExpShape(Long_t size, void *p);
   static void delete_ErfcExpShape(void *p);
   static void deleteArray_ErfcExpShape(void *p);
   static void destruct_ErfcExpShape(void *p);
   static void streamer_ErfcExpShape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ErfcExpShape*)
   {
      ::ErfcExpShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::ErfcExpShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("ErfcExpShape", ::ErfcExpShape::Class_Version(), "./include/ErfcExpShape.h", 16,
                  typeid(::ErfcExpShape), DefineBehavior(ptr, ptr),
                  &::ErfcExpShape::Dictionary, isa_proxy, 0,
                  sizeof(::ErfcExpShape) );
      instance.SetNew(&new_ErfcExpShape);
      instance.SetNewArray(&newArray_ErfcExpShape);
      instance.SetDelete(&delete_ErfcExpShape);
      instance.SetDeleteArray(&deleteArray_ErfcExpShape);
      instance.SetDestructor(&destruct_ErfcExpShape);
      instance.SetStreamerFunc(&streamer_ErfcExpShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ErfcExpShape*)
   {
      return GenerateInitInstanceLocal((::ErfcExpShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ErfcExpShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GausExpShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GausExpShape(void *p = 0);
   static void *newArray_GausExpShape(Long_t size, void *p);
   static void delete_GausExpShape(void *p);
   static void deleteArray_GausExpShape(void *p);
   static void destruct_GausExpShape(void *p);
   static void streamer_GausExpShape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GausExpShape*)
   {
      ::GausExpShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GausExpShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GausExpShape", ::GausExpShape::Class_Version(), "./include/GausExpShape.h", 16,
                  typeid(::GausExpShape), DefineBehavior(ptr, ptr),
                  &::GausExpShape::Dictionary, isa_proxy, 0,
                  sizeof(::GausExpShape) );
      instance.SetNew(&new_GausExpShape);
      instance.SetNewArray(&newArray_GausExpShape);
      instance.SetDelete(&delete_GausExpShape);
      instance.SetDeleteArray(&deleteArray_GausExpShape);
      instance.SetDestructor(&destruct_GausExpShape);
      instance.SetStreamerFunc(&streamer_GausExpShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GausExpShape*)
   {
      return GenerateInitInstanceLocal((::GausExpShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GausExpShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GausPLShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GausPLShape(void *p = 0);
   static void *newArray_GausPLShape(Long_t size, void *p);
   static void delete_GausPLShape(void *p);
   static void deleteArray_GausPLShape(void *p);
   static void destruct_GausPLShape(void *p);
   static void streamer_GausPLShape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GausPLShape*)
   {
      ::GausPLShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GausPLShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GausPLShape", ::GausPLShape::Class_Version(), "./include/GausPLShape.h", 16,
                  typeid(::GausPLShape), DefineBehavior(ptr, ptr),
                  &::GausPLShape::Dictionary, isa_proxy, 0,
                  sizeof(::GausPLShape) );
      instance.SetNew(&new_GausPLShape);
      instance.SetNewArray(&newArray_GausPLShape);
      instance.SetDelete(&delete_GausPLShape);
      instance.SetDeleteArray(&deleteArray_GausPLShape);
      instance.SetDestructor(&destruct_GausPLShape);
      instance.SetStreamerFunc(&streamer_GausPLShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GausPLShape*)
   {
      return GenerateInitInstanceLocal((::GausPLShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GausPLShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Poly2PLShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Poly2PLShape(void *p = 0);
   static void *newArray_Poly2PLShape(Long_t size, void *p);
   static void delete_Poly2PLShape(void *p);
   static void deleteArray_Poly2PLShape(void *p);
   static void destruct_Poly2PLShape(void *p);
   static void streamer_Poly2PLShape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Poly2PLShape*)
   {
      ::Poly2PLShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Poly2PLShape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Poly2PLShape", ::Poly2PLShape::Class_Version(), "./include/Poly2PLShape.h", 16,
                  typeid(::Poly2PLShape), DefineBehavior(ptr, ptr),
                  &::Poly2PLShape::Dictionary, isa_proxy, 0,
                  sizeof(::Poly2PLShape) );
      instance.SetNew(&new_Poly2PLShape);
      instance.SetNewArray(&newArray_Poly2PLShape);
      instance.SetDelete(&delete_Poly2PLShape);
      instance.SetDeleteArray(&deleteArray_Poly2PLShape);
      instance.SetDestructor(&destruct_Poly2PLShape);
      instance.SetStreamerFunc(&streamer_Poly2PLShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Poly2PLShape*)
   {
      return GenerateInitInstanceLocal((::Poly2PLShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Poly2PLShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Poly2Shape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Poly2Shape(void *p = 0);
   static void *newArray_Poly2Shape(Long_t size, void *p);
   static void delete_Poly2Shape(void *p);
   static void deleteArray_Poly2Shape(void *p);
   static void destruct_Poly2Shape(void *p);
   static void streamer_Poly2Shape(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Poly2Shape*)
   {
      ::Poly2Shape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Poly2Shape >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Poly2Shape", ::Poly2Shape::Class_Version(), "./include/Poly2Shape.h", 16,
                  typeid(::Poly2Shape), DefineBehavior(ptr, ptr),
                  &::Poly2Shape::Dictionary, isa_proxy, 0,
                  sizeof(::Poly2Shape) );
      instance.SetNew(&new_Poly2Shape);
      instance.SetNewArray(&newArray_Poly2Shape);
      instance.SetDelete(&delete_Poly2Shape);
      instance.SetDeleteArray(&deleteArray_Poly2Shape);
      instance.SetDestructor(&destruct_Poly2Shape);
      instance.SetStreamerFunc(&streamer_Poly2Shape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Poly2Shape*)
   {
      return GenerateInitInstanceLocal((::Poly2Shape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Poly2Shape*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *ErfcExpShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *ErfcExpShape::Class_Name()
{
   return "ErfcExpShape";
}

//______________________________________________________________________________
const char *ErfcExpShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ErfcExpShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ErfcExpShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::ErfcExpShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ErfcExpShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ErfcExpShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ErfcExpShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::ErfcExpShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GausExpShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GausExpShape::Class_Name()
{
   return "GausExpShape";
}

//______________________________________________________________________________
const char *GausExpShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GausExpShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GausExpShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GausExpShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GausExpShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GausExpShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GausExpShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GausExpShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *GausPLShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *GausPLShape::Class_Name()
{
   return "GausPLShape";
}

//______________________________________________________________________________
const char *GausPLShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GausPLShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GausPLShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GausPLShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GausPLShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GausPLShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GausPLShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GausPLShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Poly2PLShape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Poly2PLShape::Class_Name()
{
   return "Poly2PLShape";
}

//______________________________________________________________________________
const char *Poly2PLShape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Poly2PLShape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Poly2PLShape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Poly2PLShape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Poly2PLShape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Poly2PLShape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Poly2PLShape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Poly2PLShape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *Poly2Shape::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Poly2Shape::Class_Name()
{
   return "Poly2Shape";
}

//______________________________________________________________________________
const char *Poly2Shape::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Poly2Shape*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Poly2Shape::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Poly2Shape*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Poly2Shape::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Poly2Shape*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Poly2Shape::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Poly2Shape*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void ErfcExpShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class ErfcExpShape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      mass.Streamer(R__b);
      alpha.Streamer(R__b);
      beta.Streamer(R__b);
      gamma.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, ErfcExpShape::IsA());
   } else {
      R__c = R__b.WriteVersion(ErfcExpShape::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      mass.Streamer(R__b);
      alpha.Streamer(R__b);
      beta.Streamer(R__b);
      gamma.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void ErfcExpShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class ErfcExpShape.
      TClass *R__cl = ::ErfcExpShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mass", &mass);
      R__insp.InspectMember(mass, "mass.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.InspectMember(alpha, "alpha.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.InspectMember(beta, "beta.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gamma", &gamma);
      R__insp.InspectMember(gamma, "gamma.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_ErfcExpShape(void *p) {
      return  p ? new(p) ::ErfcExpShape : new ::ErfcExpShape;
   }
   static void *newArray_ErfcExpShape(Long_t nElements, void *p) {
      return p ? new(p) ::ErfcExpShape[nElements] : new ::ErfcExpShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_ErfcExpShape(void *p) {
      delete ((::ErfcExpShape*)p);
   }
   static void deleteArray_ErfcExpShape(void *p) {
      delete [] ((::ErfcExpShape*)p);
   }
   static void destruct_ErfcExpShape(void *p) {
      typedef ::ErfcExpShape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_ErfcExpShape(TBuffer &buf, void *obj) {
      ((::ErfcExpShape*)obj)->::ErfcExpShape::Streamer(buf);
   }
} // end of namespace ROOT for class ::ErfcExpShape

//______________________________________________________________________________
void GausExpShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class GausExpShape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      x0.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, GausExpShape::IsA());
   } else {
      R__c = R__b.WriteVersion(GausExpShape::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      x0.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GausExpShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GausExpShape.
      TClass *R__cl = ::GausExpShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.InspectMember(x0, "x0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.InspectMember(alpha, "alpha.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GausExpShape(void *p) {
      return  p ? new(p) ::GausExpShape : new ::GausExpShape;
   }
   static void *newArray_GausExpShape(Long_t nElements, void *p) {
      return p ? new(p) ::GausExpShape[nElements] : new ::GausExpShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_GausExpShape(void *p) {
      delete ((::GausExpShape*)p);
   }
   static void deleteArray_GausExpShape(void *p) {
      delete [] ((::GausExpShape*)p);
   }
   static void destruct_GausExpShape(void *p) {
      typedef ::GausExpShape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GausExpShape(TBuffer &buf, void *obj) {
      ((::GausExpShape*)obj)->::GausExpShape::Streamer(buf);
   }
} // end of namespace ROOT for class ::GausExpShape

//______________________________________________________________________________
void GausPLShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class GausPLShape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      x0.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      n.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, GausPLShape::IsA());
   } else {
      R__c = R__b.WriteVersion(GausPLShape::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      x0.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      n.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void GausPLShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GausPLShape.
      TClass *R__cl = ::GausPLShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x0", &x0);
      R__insp.InspectMember(x0, "x0.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.InspectMember(alpha, "alpha.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n", &n);
      R__insp.InspectMember(n, "n.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GausPLShape(void *p) {
      return  p ? new(p) ::GausPLShape : new ::GausPLShape;
   }
   static void *newArray_GausPLShape(Long_t nElements, void *p) {
      return p ? new(p) ::GausPLShape[nElements] : new ::GausPLShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_GausPLShape(void *p) {
      delete ((::GausPLShape*)p);
   }
   static void deleteArray_GausPLShape(void *p) {
      delete [] ((::GausPLShape*)p);
   }
   static void destruct_GausPLShape(void *p) {
      typedef ::GausPLShape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_GausPLShape(TBuffer &buf, void *obj) {
      ((::GausPLShape*)obj)->::GausPLShape::Streamer(buf);
   }
} // end of namespace ROOT for class ::GausPLShape

//______________________________________________________________________________
void Poly2Shape::Streamer(TBuffer &R__b)
{
   // Stream an object of class Poly2Shape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      xbar.Streamer(R__b);
      sigma.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, Poly2Shape::IsA());
   } else {
      R__c = R__b.WriteVersion(Poly2Shape::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      xbar.Streamer(R__b);
      sigma.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Poly2Shape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Poly2Shape.
      TClass *R__cl = ::Poly2Shape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xbar", &xbar);
      R__insp.InspectMember(xbar, "xbar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Poly2Shape(void *p) {
      return  p ? new(p) ::Poly2Shape : new ::Poly2Shape;
   }
   static void *newArray_Poly2Shape(Long_t nElements, void *p) {
      return p ? new(p) ::Poly2Shape[nElements] : new ::Poly2Shape[nElements];
   }
   // Wrapper around operator delete
   static void delete_Poly2Shape(void *p) {
      delete ((::Poly2Shape*)p);
   }
   static void deleteArray_Poly2Shape(void *p) {
      delete [] ((::Poly2Shape*)p);
   }
   static void destruct_Poly2Shape(void *p) {
      typedef ::Poly2Shape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Poly2Shape(TBuffer &buf, void *obj) {
      ((::Poly2Shape*)obj)->::Poly2Shape::Streamer(buf);
   }
} // end of namespace ROOT for class ::Poly2Shape

//______________________________________________________________________________
void Poly2PLShape::Streamer(TBuffer &R__b)
{
   // Stream an object of class Poly2PLShape.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      xbar.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      n.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, Poly2PLShape::IsA());
   } else {
      R__c = R__b.WriteVersion(Poly2PLShape::IsA(), kTRUE);
      RooAbsPdf::Streamer(R__b);
      x.Streamer(R__b);
      xbar.Streamer(R__b);
      sigma.Streamer(R__b);
      alpha.Streamer(R__b);
      n.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void Poly2PLShape::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Poly2PLShape.
      TClass *R__cl = ::Poly2PLShape::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.InspectMember(x, "x.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xbar", &xbar);
      R__insp.InspectMember(xbar, "xbar.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma", &sigma);
      R__insp.InspectMember(sigma, "sigma.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "alpha", &alpha);
      R__insp.InspectMember(alpha, "alpha.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "n", &n);
      R__insp.InspectMember(n, "n.");
      RooAbsPdf::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Poly2PLShape(void *p) {
      return  p ? new(p) ::Poly2PLShape : new ::Poly2PLShape;
   }
   static void *newArray_Poly2PLShape(Long_t nElements, void *p) {
      return p ? new(p) ::Poly2PLShape[nElements] : new ::Poly2PLShape[nElements];
   }
   // Wrapper around operator delete
   static void delete_Poly2PLShape(void *p) {
      delete ((::Poly2PLShape*)p);
   }
   static void deleteArray_Poly2PLShape(void *p) {
      delete [] ((::Poly2PLShape*)p);
   }
   static void destruct_Poly2PLShape(void *p) {
      typedef ::Poly2PLShape current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Poly2PLShape(TBuffer &buf, void *obj) {
      ((::Poly2PLShape*)obj)->::Poly2PLShape::Streamer(buf);
   }
} // end of namespace ROOT for class ::Poly2PLShape

/********************************************************
* src/pdfDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablepdfDict();

extern "C" void G__set_cpp_environmentpdfDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/ErfcExpShape.h");
  G__add_compiledheader("include/GausExpShape.h");
  G__add_compiledheader("include/GausPLShape.h");
  G__add_compiledheader("include/Poly2PLShape.h");
  G__add_compiledheader("include/Poly2Shape.h");
  G__cpp_reset_tagtablepdfDict();
}
#include <new>
extern "C" int G__cpp_dllrevpdfDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* ErfcExpShape */
static int G__pdfDict_800_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ErfcExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ErfcExpShape[n];
     } else {
       p = new((void*) gvp) ErfcExpShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ErfcExpShape;
     } else {
       p = new((void*) gvp) ErfcExpShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ErfcExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ErfcExpShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   } else {
     p = new((void*) gvp) ErfcExpShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ErfcExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ErfcExpShape(*(ErfcExpShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) ErfcExpShape(*(ErfcExpShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new ErfcExpShape(*(ErfcExpShape*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) ErfcExpShape(*(ErfcExpShape*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ErfcExpShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ErfcExpShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ErfcExpShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ErfcExpShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((ErfcExpShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ErfcExpShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ErfcExpShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ErfcExpShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_800_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ErfcExpShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ErfcExpShape G__TErfcExpShape;
static int G__pdfDict_800_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ErfcExpShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ErfcExpShape*) (soff+(sizeof(ErfcExpShape)*i)))->~G__TErfcExpShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ErfcExpShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ErfcExpShape*) (soff))->~G__TErfcExpShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GausExpShape */
static int G__pdfDict_801_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausExpShape[n];
     } else {
       p = new((void*) gvp) GausExpShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausExpShape;
     } else {
       p = new((void*) gvp) GausExpShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GausExpShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   } else {
     p = new((void*) gvp) GausExpShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausExpShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausExpShape(*(GausExpShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) GausExpShape(*(GausExpShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausExpShape(*(GausExpShape*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) GausExpShape(*(GausExpShape*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausExpShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GausExpShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausExpShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GausExpShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GausExpShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GausExpShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausExpShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GausExpShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausExpShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_801_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GausExpShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GausExpShape G__TGausExpShape;
static int G__pdfDict_801_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GausExpShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GausExpShape*) (soff+(sizeof(GausExpShape)*i)))->~G__TGausExpShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GausExpShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GausExpShape*) (soff))->~G__TGausExpShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GausPLShape */
static int G__pdfDict_802_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausPLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausPLShape[n];
     } else {
       p = new((void*) gvp) GausPLShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausPLShape;
     } else {
       p = new((void*) gvp) GausPLShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausPLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausPLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GausPLShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) GausPLShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausPLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GausPLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausPLShape(*(GausPLShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) GausPLShape(*(GausPLShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GausPLShape(*(GausPLShape*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) GausPLShape(*(GausPLShape*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_GausPLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GausPLShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausPLShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GausPLShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GausPLShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GausPLShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausPLShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GausPLShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GausPLShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_802_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GausPLShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GausPLShape G__TGausPLShape;
static int G__pdfDict_802_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GausPLShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GausPLShape*) (soff+(sizeof(GausPLShape)*i)))->~G__TGausPLShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GausPLShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GausPLShape*) (soff))->~G__TGausPLShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Poly2PLShape */
static int G__pdfDict_803_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2PLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2PLShape[n];
     } else {
       p = new((void*) gvp) Poly2PLShape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2PLShape;
     } else {
       p = new((void*) gvp) Poly2PLShape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2PLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 7
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Poly2PLShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   } else {
     p = new((void*) gvp) Poly2PLShape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref, *(RooAbsReal*) libp->para[5].ref
, *(RooAbsReal*) libp->para[6].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2PLShape* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2PLShape(*(Poly2PLShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Poly2PLShape(*(Poly2PLShape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2PLShape(*(Poly2PLShape*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) Poly2PLShape(*(Poly2PLShape*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Poly2PLShape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2PLShape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Poly2PLShape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Poly2PLShape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Poly2PLShape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2PLShape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Poly2PLShape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2PLShape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_803_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Poly2PLShape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Poly2PLShape G__TPoly2PLShape;
static int G__pdfDict_803_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Poly2PLShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Poly2PLShape*) (soff+(sizeof(Poly2PLShape)*i)))->~G__TPoly2PLShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Poly2PLShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Poly2PLShape*) (soff))->~G__TPoly2PLShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Poly2Shape */
static int G__pdfDict_804_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2Shape* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2Shape[n];
     } else {
       p = new((void*) gvp) Poly2Shape[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2Shape;
     } else {
       p = new((void*) gvp) Poly2Shape;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2Shape* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Poly2Shape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   } else {
     p = new((void*) gvp) Poly2Shape(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, *(RooAbsReal*) libp->para[2].ref, *(RooAbsReal*) libp->para[3].ref
, *(RooAbsReal*) libp->para[4].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Poly2Shape* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2Shape(*(Poly2Shape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) Poly2Shape(*(Poly2Shape*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Poly2Shape(*(Poly2Shape*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) Poly2Shape(*(Poly2Shape*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Poly2Shape::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2Shape::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Poly2Shape::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Poly2Shape::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Poly2Shape*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2Shape::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Poly2Shape::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Poly2Shape::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__pdfDict_804_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Poly2Shape::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Poly2Shape G__TPoly2Shape;
static int G__pdfDict_804_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Poly2Shape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Poly2Shape*) (soff+(sizeof(Poly2Shape)*i)))->~G__TPoly2Shape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Poly2Shape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Poly2Shape*) (soff))->~G__TPoly2Shape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* ErfcExpShape */

/* GausExpShape */

/* GausPLShape */

/* Poly2PLShape */

/* Poly2Shape */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncpdfDict {
 public:
  G__Sizep2memfuncpdfDict(): p(&G__Sizep2memfuncpdfDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncpdfDict::*p)();
};

size_t G__get_sizep2memfuncpdfDict()
{
  G__Sizep2memfuncpdfDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancepdfDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape))) {
     ErfcExpShape *G__Lderived;
     G__Lderived=(ErfcExpShape*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape))) {
     GausExpShape *G__Lderived;
     G__Lderived=(GausExpShape*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape),G__get_linked_tagnum(&G__pdfDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape))) {
     GausPLShape *G__Lderived;
     G__Lderived=(GausPLShape*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape),G__get_linked_tagnum(&G__pdfDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape))) {
     Poly2PLShape *G__Lderived;
     G__Lderived=(Poly2PLShape*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape),G__get_linked_tagnum(&G__pdfDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape))) {
     Poly2Shape *G__Lderived;
     G__Lderived=(Poly2Shape*)0x1000;
     {
       RooAbsPdf *G__Lpbase=(RooAbsPdf*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsPdf),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       RooAbsReal *G__Lpbase=(RooAbsReal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsReal),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooAbsArg *G__Lpbase=(RooAbsArg*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_RooAbsArg),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       RooPrintable *G__Lpbase=(RooPrintable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape),G__get_linked_tagnum(&G__pdfDictLN_RooPrintable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablepdfDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,RooLinkedListElem*>",117,G__get_linked_tagnum(&G__pdfDictLN_pairlEintcORooLinkedListElemmUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<std::pair<Int_t,RooLinkedListElem*> >",117,G__get_linked_tagnum(&G__pdfDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<pair<int,RooLinkedListElem*> >",117,G__get_linked_tagnum(&G__pdfDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::string>",117,G__get_linked_tagnum(&G__pdfDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::string>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<std::pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*> >",117,G__get_linked_tagnum(&G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> > >",117,G__get_linked_tagnum(&G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<RooAbsCache*>",117,G__get_linked_tagnum(&G__pdfDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__pdfDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__pdfDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__pdfDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooCurve*>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<Double_t>",117,G__get_linked_tagnum(&G__pdfDictLN_listlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TH1*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TH1*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataHist*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataHist*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooDataSet*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooDataSet*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,RooAbsData*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,RooAbsData*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<EvalError>",117,G__get_linked_tagnum(&G__pdfDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<RooAbsReal::EvalError>",117,G__get_linked_tagnum(&G__pdfDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,std::list<EvalError> >",117,G__get_linked_tagnum(&G__pdfDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,std::pair<std::string,std::list<EvalError> > >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::string>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,string,less<int> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<StreamConfig>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooMsgService::StreamConfig>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__pdfDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<std::vector<StreamConfig> >",117,G__get_linked_tagnum(&G__pdfDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > >",117,G__get_linked_tagnum(&G__pdfDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::ostream*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*>",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,basic_ostream<char,char_traits<char> >*,less<string> >",117,G__get_linked_tagnum(&G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooNormSetCache>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RooAbsCacheElement*>",117,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__pdfDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* ErfcExpShape */
static void G__setup_memvarErfcExpShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape));
   { ErfcExpShape *p; p=(ErfcExpShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"mass=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"gamma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pdfDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GausExpShape */
static void G__setup_memvarGausExpShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape));
   { GausExpShape *p; p=(GausExpShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pdfDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GausPLShape */
static void G__setup_memvarGausPLShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape));
   { GausPLShape *p; p=(GausPLShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"n=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pdfDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Poly2PLShape */
static void G__setup_memvarPoly2PLShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape));
   { Poly2PLShape *p; p=(Poly2PLShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"xbar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"n=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pdfDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Poly2Shape */
static void G__setup_memvarPoly2Shape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape));
   { Poly2Shape *p; p=(Poly2Shape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"xbar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__pdfDictLN_RooRealProxy),-1,-1,2,"sigma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__pdfDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarpdfDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncErfcExpShape(void) {
   /* ErfcExpShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape));
   G__memfunc_setup("ErfcExpShape",1182,G__pdfDict_800_0_1, 105, G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErfcExpShape",1182,G__pdfDict_800_0_2, 105, G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _mass u 'RooAbsReal' - 1 - _alpha "
"u 'RooAbsReal' - 1 - _beta u 'RooAbsReal' - 1 - _gamma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ErfcExpShape",1182,G__pdfDict_800_0_3, 105, G__get_linked_tagnum(&G__pdfDictLN_ErfcExpShape), -1, 0, 2, 1, 1, 0, 
"u 'ErfcExpShape' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__pdfDict_800_0_8, 85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&ErfcExpShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pdfDict_800_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ErfcExpShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pdfDict_800_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&ErfcExpShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pdfDict_800_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&ErfcExpShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pdfDict_800_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pdfDict_800_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ErfcExpShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pdfDict_800_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ErfcExpShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pdfDict_800_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&ErfcExpShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pdfDict_800_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&ErfcExpShape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~ErfcExpShape", 1308, G__pdfDict_800_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGausExpShape(void) {
   /* GausExpShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pdfDictLN_GausExpShape));
   G__memfunc_setup("GausExpShape",1198,G__pdfDict_801_0_1, 105, G__get_linked_tagnum(&G__pdfDictLN_GausExpShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GausExpShape",1198,G__pdfDict_801_0_2, 105, G__get_linked_tagnum(&G__pdfDictLN_GausExpShape), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _x0 "
"u 'RooAbsReal' - 1 - _sigma u 'RooAbsReal' - 1 - _alpha", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GausExpShape",1198,G__pdfDict_801_0_3, 105, G__get_linked_tagnum(&G__pdfDictLN_GausExpShape), -1, 0, 2, 1, 1, 0, 
"u 'GausExpShape' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__pdfDict_801_0_8, 85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GausExpShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pdfDict_801_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausExpShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pdfDict_801_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GausExpShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pdfDict_801_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GausExpShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pdfDict_801_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pdfDict_801_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausExpShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pdfDict_801_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GausExpShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pdfDict_801_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausExpShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pdfDict_801_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GausExpShape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GausExpShape", 1324, G__pdfDict_801_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGausPLShape(void) {
   /* GausPLShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pdfDictLN_GausPLShape));
   G__memfunc_setup("GausPLShape",1053,G__pdfDict_802_0_1, 105, G__get_linked_tagnum(&G__pdfDictLN_GausPLShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GausPLShape",1053,G__pdfDict_802_0_2, 105, G__get_linked_tagnum(&G__pdfDictLN_GausPLShape), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _x0 "
"u 'RooAbsReal' - 1 - _sigma u 'RooAbsReal' - 1 - _alpha "
"u 'RooAbsReal' - 1 - _n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GausPLShape",1053,G__pdfDict_802_0_3, 105, G__get_linked_tagnum(&G__pdfDictLN_GausPLShape), -1, 0, 2, 1, 1, 0, 
"u 'GausPLShape' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__pdfDict_802_0_8, 85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GausPLShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pdfDict_802_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausPLShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pdfDict_802_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GausPLShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pdfDict_802_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GausPLShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pdfDict_802_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pdfDict_802_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausPLShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pdfDict_802_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GausPLShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pdfDict_802_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GausPLShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pdfDict_802_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GausPLShape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GausPLShape", 1179, G__pdfDict_802_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPoly2PLShape(void) {
   /* Poly2PLShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape));
   G__memfunc_setup("Poly2PLShape",1123,G__pdfDict_803_0_1, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Poly2PLShape",1123,G__pdfDict_803_0_2, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape), -1, 0, 7, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _xbar "
"u 'RooAbsReal' - 1 - _sigma u 'RooAbsReal' - 1 - _alpha "
"u 'RooAbsReal' - 1 - _n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Poly2PLShape",1123,G__pdfDict_803_0_3, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2PLShape), -1, 0, 2, 1, 1, 0, 
"u 'Poly2PLShape' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__pdfDict_803_0_8, 85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Poly2PLShape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pdfDict_803_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2PLShape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pdfDict_803_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Poly2PLShape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pdfDict_803_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Poly2PLShape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pdfDict_803_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pdfDict_803_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2PLShape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pdfDict_803_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Poly2PLShape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pdfDict_803_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2PLShape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pdfDict_803_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Poly2PLShape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Poly2PLShape", 1249, G__pdfDict_803_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncPoly2Shape(void) {
   /* Poly2Shape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape));
   G__memfunc_setup("Poly2Shape",967,G__pdfDict_804_0_1, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Poly2Shape",967,G__pdfDict_804_0_2, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape), -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"u 'RooAbsReal' - 1 - _x u 'RooAbsReal' - 1 - _xbar "
"u 'RooAbsReal' - 1 - _sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Poly2Shape",967,G__pdfDict_804_0_3, 105, G__get_linked_tagnum(&G__pdfDictLN_Poly2Shape), -1, 0, 2, 1, 1, 0, 
"u 'Poly2Shape' - 11 - other C - - 10 '0' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TObject), -1, 0, 1, 1, 1, 8, "C - - 10 - newname", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAnalyticalIntegral",2168,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"u 'RooArgSet' - 1 - allVars u 'RooArgSet' - 1 - analVars "
"C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("analyticalIntegral",1880,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - code C - - 10 '0' rangeName", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("evaluate",855,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__pdfDict_804_0_8, 85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Poly2Shape::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__pdfDict_804_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2Shape::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__pdfDict_804_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Poly2Shape::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__pdfDict_804_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Poly2Shape::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__pdfDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__pdfDict_804_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__pdfDict_804_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2Shape::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__pdfDict_804_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Poly2Shape::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__pdfDict_804_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Poly2Shape::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__pdfDict_804_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Poly2Shape::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Poly2Shape", 1093, G__pdfDict_804_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncpdfDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalpdfDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcpdfDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__pdfDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__pdfDictLN_RooPrintable = { "RooPrintable" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_RooAbsArg = { "RooAbsArg" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_RooArgSet = { "RooArgSet" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_listlEdoublecOallocatorlEdoublegRsPgR = { "list<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_pairlEintcORooLinkedListElemmUgR = { "pair<int,RooLinkedListElem*>" , 115 , -1 };
G__linked_taginfo G__pdfDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR = { "list<pair<int,RooLinkedListElem*>,allocator<pair<int,RooLinkedListElem*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR = { "set<string,less<string>,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_RooRealProxy = { "RooRealProxy" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR = { "set<pair<RooAbsArg*,RooAbsArg*>,less<pair<RooAbsArg*,RooAbsArg*> >,allocator<pair<RooAbsArg*,RooAbsArg*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_RooAbsReal = { "RooAbsReal" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR = { "deque<RooAbsCache*,allocator<RooAbsCache*> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR = { "vector<RooCurve*,allocator<RooCurve*> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooCurve*,allocator<RooCurve*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_RooAbsPdf = { "RooAbsPdf" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR = { "map<string,TH1*,less<string>,allocator<pair<const string,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR = { "map<string,RooDataHist*,less<string>,allocator<pair<const string,RooDataHist*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR = { "map<string,RooDataSet*,less<string>,allocator<pair<const string,RooDataSet*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR = { "map<string,RooAbsData*,less<string>,allocator<pair<const string,RooAbsData*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR = { "list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR = { "pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >" , 115 , -1 };
G__linked_taginfo G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR = { "map<const RooAbsArg*,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > >,less<const RooAbsArg*>,allocator<pair<const RooAbsArg* const,pair<string,list<RooAbsReal::EvalError,allocator<RooAbsReal::EvalError> > > > > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR = { "map<int,string,less<int>,allocator<pair<const int,string> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR = { "vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR = { "deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR = { "stack<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,deque<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> >,allocator<vector<RooMsgService::StreamConfig,allocator<RooMsgService::StreamConfig> > > > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR = { "map<string,basic_ostream<char,char_traits<char> >*,less<string>,allocator<pair<const string,basic_ostream<char,char_traits<char> >*> > >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR = { "vector<RooNormSetCache,allocator<RooNormSetCache> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooNormSetCache,allocator<RooNormSetCache> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR = { "vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<RooAbsCacheElement*,allocator<RooAbsCacheElement*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_ErfcExpShape = { "ErfcExpShape" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_GausExpShape = { "GausExpShape" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_GausPLShape = { "GausPLShape" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_Poly2PLShape = { "Poly2PLShape" , 99 , -1 };
G__linked_taginfo G__pdfDictLN_Poly2Shape = { "Poly2Shape" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablepdfDict() {
  G__pdfDictLN_TClass.tagnum = -1 ;
  G__pdfDictLN_TBuffer.tagnum = -1 ;
  G__pdfDictLN_TMemberInspector.tagnum = -1 ;
  G__pdfDictLN_TObject.tagnum = -1 ;
  G__pdfDictLN_TNamed.tagnum = -1 ;
  G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__pdfDictLN_RooPrintable.tagnum = -1 ;
  G__pdfDictLN_RooAbsArg.tagnum = -1 ;
  G__pdfDictLN_RooArgSet.tagnum = -1 ;
  G__pdfDictLN_listlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__pdfDictLN_pairlEintcORooLinkedListElemmUgR.tagnum = -1 ;
  G__pdfDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_RooRealProxy.tagnum = -1 ;
  G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_RooAbsReal.tagnum = -1 ;
  G__pdfDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR.tagnum = -1 ;
  G__pdfDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__pdfDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__pdfDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_RooAbsPdf.tagnum = -1 ;
  G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR.tagnum = -1 ;
  G__pdfDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR.tagnum = -1 ;
  G__pdfDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__pdfDictLN_ErfcExpShape.tagnum = -1 ;
  G__pdfDictLN_GausExpShape.tagnum = -1 ;
  G__pdfDictLN_GausPLShape.tagnum = -1 ;
  G__pdfDictLN_Poly2PLShape.tagnum = -1 ;
  G__pdfDictLN_Poly2Shape.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablepdfDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooPrintable);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooAbsArg);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooArgSet);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_listlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_pairlEintcORooLinkedListElemmUgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_listlEpairlEintcORooLinkedListElemmUgRcOallocatorlEpairlEintcORooLinkedListElemmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_setlEstringcOlesslEstringgRcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooRealProxy);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_setlEpairlERooAbsArgmUcORooAbsArgmUgRcOlesslEpairlERooAbsArgmUcORooAbsArgmUgRsPgRcOallocatorlEpairlERooAbsArgmUcORooAbsArgmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooAbsReal);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_dequelERooAbsCachemUcOallocatorlERooAbsCachemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlERooCurvemUcOallocatorlERooCurvemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlERooCurvemUcOallocatorlERooCurvemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_RooAbsPdf);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcOTH1mUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcORooDataHistmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataHistmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcORooDataSetmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooDataSetmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcORooAbsDatamUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcORooAbsDatamUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_listlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_pairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEconstsPRooAbsArgmUcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRcOlesslEconstsPRooAbsArgmUgRcOallocatorlEpairlEconstsPRooAbsArgmUsPconstcOpairlEstringcOlistlERooAbsRealcLcLEvalErrorcOallocatorlERooAbsRealcLcLEvalErrorgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEintcOstringcOlesslEintgRcOallocatorlEpairlEconstsPintcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_dequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_stacklEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOdequelEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRcOallocatorlEvectorlERooMsgServicecLcLStreamConfigcOallocatorlERooMsgServicecLcLStreamConfiggRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_maplEstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcObasic_ostreamlEcharcOchar_traitslEchargRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlERooNormSetCachecOallocatorlERooNormSetCachegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_vectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__pdfDictLN_reverse_iteratorlEvectorlERooAbsCacheElementmUcOallocatorlERooAbsCacheElementmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pdfDictLN_ErfcExpShape),sizeof(ErfcExpShape),-1,63232,"Generic background shape with erf-like turn on and exponential decay",G__setup_memvarErfcExpShape,G__setup_memfuncErfcExpShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pdfDictLN_GausExpShape),sizeof(GausExpShape),-1,63232,"A generic background shape with a gaussian turn on and an exponential tail",G__setup_memvarGausExpShape,G__setup_memfuncGausExpShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pdfDictLN_GausPLShape),sizeof(GausPLShape),-1,63232,"Generic background shape with a gaussian turn on and a power law tail",G__setup_memvarGausPLShape,G__setup_memfuncGausPLShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pdfDictLN_Poly2PLShape),sizeof(Poly2PLShape),-1,63232,"Generic background with a second order polynomial turn on and a power law tail",G__setup_memvarPoly2PLShape,G__setup_memfuncPoly2PLShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__pdfDictLN_Poly2Shape),sizeof(Poly2Shape),-1,63232,"second order polynomial",G__setup_memvarPoly2Shape,G__setup_memfuncPoly2Shape);
}
extern "C" void G__cpp_setuppdfDict(void) {
  G__check_setup_version(30051515,"G__cpp_setuppdfDict()");
  G__set_cpp_environmentpdfDict();
  G__cpp_setup_tagtablepdfDict();

  G__cpp_setup_inheritancepdfDict();

  G__cpp_setup_typetablepdfDict();

  G__cpp_setup_memvarpdfDict();

  G__cpp_setup_memfuncpdfDict();
  G__cpp_setup_globalpdfDict();
  G__cpp_setup_funcpdfDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncpdfDict();
  return;
}
class G__cpp_setup_initpdfDict {
  public:
    G__cpp_setup_initpdfDict() { G__add_setup_func("pdfDict",(G__incsetup)(&G__cpp_setuppdfDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initpdfDict() { G__remove_setup_func("pdfDict"); }
};
G__cpp_setup_initpdfDict G__cpp_setup_initializerpdfDict;

