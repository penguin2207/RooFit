/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ERFCEXPBACKGROUND
#define ERFCEXPBACKGROUND

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class ErfcExpShape : public RooAbsPdf {
public:
  ErfcExpShape() {} ; 
  ErfcExpShape(const char *name, const char *title,
	      RooAbsReal& _mass,
	      RooAbsReal& _alpha,
	      RooAbsReal& _beta,
	      RooAbsReal& _gamma);
  ErfcExpShape(const ErfcExpShape& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new ErfcExpShape(*this,newname); }
  inline virtual ~ErfcExpShape() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy mass ;
  RooRealProxy alpha ;
  RooRealProxy beta ;
  RooRealProxy gamma ;

  Double_t evaluate() const ;

private:

  ClassDef(ErfcExpShape,1) // Generic background shape with erf-like turn on and exponential decay
};
 
#endif
